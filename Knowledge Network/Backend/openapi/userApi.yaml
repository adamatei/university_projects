swagger: '2.0'
info:
  title: Pink Flooid User API
  version: v1
host: 127.0.0.1:8000
schemes:
  - http
basePath: /v1
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  Basic:
    type: basic
security:
  - Basic: []
paths:
  /data/:
    get:
      operationId: data_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/SubmittedData'
      tags:
        - data
    post:
      operationId: data_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SubmittedData'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SubmittedData'
      tags:
        - data
    parameters: []
  /data/approve/{id}:
    post:
      operationId: data_approve_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SubmittedData'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/SubmittedData'
      tags:
        - data
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this submitted data.
        required: true
        type: integer
  /data/{id}/:
    get:
      operationId: data_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/SubmittedData'
      tags:
        - data
    put:
      operationId: data_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SubmittedData'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/SubmittedData'
      tags:
        - data
    patch:
      operationId: data_partial_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/SubmittedData'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/SubmittedData'
      tags:
        - data
    delete:
      operationId: data_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - data
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this submitted data.
        required: true
        type: integer
  /labels/:
    get:
      operationId: labels_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/Label'
      tags:
        - labels
    post:
      operationId: labels_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/Label'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/Label'
      tags:
        - labels
    parameters: []
  /labels/search/{looked_string}/:
    get:
      operationId: labels_search_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Label'
      tags:
        - labels
    parameters:
      - name: looked_string
        in: path
        required: true
        type: string
  /labels/{id}/:
    get:
      operationId: labels_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/Label'
      tags:
        - labels
    delete:
      operationId: labels_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - labels
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this label.
        required: true
        type: integer
  /token/login/:
    post:
      operationId: token_login_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/MyTokenObtainPair'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/MyTokenObtainPair'
      tags:
        - token
    parameters: []
  /token/refresh/:
    post:
      operationId: token_refresh_create
      description: |-
        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenRefresh'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenRefresh'
      tags:
        - token
    parameters: []
  /token/verify/:
    post:
      operationId: token_verify_create
      description: |-
        Takes a token and indicates if it is valid.  This view provides no
        information about a token's fitness for a particular use.
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/TokenVerify'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/TokenVerify'
      tags:
        - token
    parameters: []
  /urls/:
    get:
      operationId: urls_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - urls
    post:
      operationId: urls_create
      description: ''
      parameters: []
      responses:
        '201':
          description: ''
      tags:
        - urls
    parameters: []
  /urls/{id}/:
    put:
      operationId: urls_update
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - urls
    delete:
      operationId: urls_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - urls
    parameters:
      - name: id
        in: path
        required: true
        type: string
  /users/:
    get:
      operationId: users_list
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
      tags:
        - users
    post:
      operationId: users_create
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '201':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - users
    parameters: []
  /users/{id}/:
    get:
      operationId: users_read
      description: ''
      parameters: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - users
    put:
      operationId: users_update
      description: ''
      parameters:
        - name: data
          in: body
          required: true
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/User'
      tags:
        - users
    delete:
      operationId: users_delete
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
        - users
    parameters:
      - name: id
        in: path
        description: A unique integer value identifying this user.
        required: true
        type: integer
definitions:
  DataRelationship:
    required:
      - related_data_name
      - data
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      related_data_name:
        title: Related data name
        type: string
        maxLength: 1000
        minLength: 1
      data:
        title: Data
        type: integer
  SubmittedData:
    required:
      - data
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      data:
        title: Data
        type: string
        maxLength: 1000
        minLength: 1
      approved:
        title: Approved
        type: boolean
      relationships:
        type: array
        items:
          $ref: '#/definitions/DataRelationship'
        readOnly: true
  Label:
    required:
      - name
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      name:
        title: Name
        type: string
        maxLength: 100
        minLength: 1
  MyTokenObtainPair:
    required:
      - email
      - password
    type: object
    properties:
      email:
        title: Email
        type: string
        minLength: 1
      password:
        title: Password
        type: string
        minLength: 1
  TokenRefresh:
    required:
      - refresh
    type: object
    properties:
      refresh:
        title: Refresh
        type: string
        minLength: 1
      access:
        title: Access
        type: string
        readOnly: true
        minLength: 1
  TokenVerify:
    required:
      - token
    type: object
    properties:
      token:
        title: Token
        type: string
        minLength: 1
  User:
    required:
      - first_name
      - last_name
      - email
      - password
    type: object
    properties:
      id:
        title: ID
        type: integer
        readOnly: true
      first_name:
        title: First name
        type: string
        maxLength: 100
        minLength: 1
      last_name:
        title: Last name
        type: string
        maxLength: 100
        minLength: 1
      email:
        title: Email
        type: string
        format: email
        maxLength: 100
        minLength: 1
      password:
        title: Password
        type: string
        maxLength: 255
        minLength: 1
      job_title:
        title: Job title
        type: string
        maxLength: 100
        minLength: 1
      role:
        title: Role
        type: string
        maxLength: 50
        minLength: 1
      topology_labels:
        type: array
        items:
          type: integer
        uniqueItems: true
