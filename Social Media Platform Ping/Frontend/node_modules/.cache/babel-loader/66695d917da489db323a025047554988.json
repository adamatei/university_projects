{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ADA\\\\Documents\\\\GitHub\\\\ping-social-media\\\\Frontend\\\\src\\\\Components\\\\WritePostComponent.js\";\nimport React from \"react\";\nimport \"./MainPageComponent.css\";\nimport Avatar from \"react-user-avatar\";\nimport TagsInput from \"react-tagsinput\";\nimport \"react-tagsinput/react-tagsinput.css\";\nimport Select from \"react-select\";\nimport FollowService from \"../Services/FollowService\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport PostService from \"../Services/PostService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass WritePostComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchWord: \"\",\n      firstName: \"Axl\",\n      lastName: \"Rose\",\n      username: localStorage.getItem(\"username\"),\n      pings: [],\n      text: \"\",\n      followers: [],\n      following: [],\n      tags: [],\n      trends: [],\n      mentions: [],\n      mentionsData: [],\n      hashtags: []\n    };\n    this.handleChangeTags = this.handleChangeTags.bind(this);\n    this.handleChangeMentions = this.handleChangeMentions.bind(this);\n    this.handleText = this.handleText.bind(this);\n    this.createPost = this.createPost.bind(this);\n  }\n\n  handleText(event) {\n    this.setState({\n      text: event.target.value\n    });\n  }\n\n  handleChangeTags(hashtags) {\n    this.setState({\n      hashtags\n    });\n  }\n\n  handleChangeMentions(mentions) {\n    this.setState({\n      mentions\n    });\n  }\n\n  createPost() {\n    if (this.state.text.length != 0) {\n      let ping = {\n        createdBy: this.state.username,\n        createdOn: new Date(Date().toLocaleString()),\n        text: this.state.text,\n        tags: this.addTags()\n      };\n      console.log(ping);\n      PostService.createPost(ping).then(res => {\n        window.location.reload(false);\n        confirmAlert({\n          customUI: _ref => {\n            let {\n              onClose\n            } = _ref;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-ui\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Post successfully created!!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button-1\",\n                onClick: onClose,\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this);\n          }\n        });\n      }).catch(error => {\n        console.log(error);\n        confirmAlert({\n          customUI: _ref2 => {\n            let {\n              onClose\n            } = _ref2;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"custom-ui\",\n              children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n                children: \"Something went wrong!\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Please try again\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button-1\",\n                onClick: onClose,\n                children: \"Close\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this);\n          }\n        });\n      });\n    } else {\n      confirmAlert({\n        customUI: _ref3 => {\n          let {\n            onClose\n          } = _ref3;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-ui\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"A post should not be empty!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Please fill in the post text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button-1\",\n              onClick: onClose,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this);\n        }\n      });\n    }\n  }\n\n  addTags() {\n    let postMentions = this.state.mentions.map(m => ({\n      content: m.value,\n      type: \"mention\"\n    }));\n    console.log(postMentions);\n    let postHashtags = this.state.hashtags.map(h => ({\n      content: h,\n      type: \"hashtag\"\n    }));\n    console.log(postHashtags);\n    let postTags = [].concat(postMentions, postHashtags);\n    console.log(postTags);\n    return postTags;\n  }\n\n  componentDidMount() {\n    FollowService.getFolowing(this.state.username).then(res => {\n      this.setState({\n        following: res.data\n      });\n      let mentionsData = res.data.map(usrn => ({\n        value: usrn,\n        label: usrn\n      }));\n      this.setState({\n        mentionsData: mentionsData\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"write-post-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-profile-img\",\n          children: /*#__PURE__*/_jsxDEV(Avatar, {\n            size: \"40\",\n            name: this.state.firstName,\n            src: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: this.state.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"Public\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"post-input-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          rows: \"3\",\n          placeholder: \"What's on your mind?\",\n          onChange: this.handleText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-post-links\",\n          children: [/*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Hashtags\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TagsInput, {\n            color: \"blue\",\n            size: \"20\",\n            value: this.state.hashtags,\n            onChange: this.handleChangeTags\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            children: \"Mention\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            isMulti: true,\n            name: \"colors\",\n            options: this.state.mentionsData,\n            className: \"basic-multi-select\",\n            classNamePrefix: \"select\",\n            onChange: this.handleChangeMentions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          id: \"post-btn\",\n          onClick: this.createPost,\n          children: \"Post it\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default WritePostComponent;","map":{"version":3,"sources":["C:/Users/ADA/Documents/GitHub/ping-social-media/Frontend/src/Components/WritePostComponent.js"],"names":["React","Avatar","TagsInput","Select","FollowService","confirmAlert","PostService","WritePostComponent","Component","constructor","props","state","searchWord","firstName","lastName","username","localStorage","getItem","pings","text","followers","following","tags","trends","mentions","mentionsData","hashtags","handleChangeTags","bind","handleChangeMentions","handleText","createPost","event","setState","target","value","length","ping","createdBy","createdOn","Date","toLocaleString","addTags","console","log","then","res","window","location","reload","customUI","onClose","catch","error","postMentions","map","m","content","type","postHashtags","h","postTags","concat","componentDidMount","getFolowing","data","usrn","label","render"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport \"./MainPageComponent.css\";\r\nimport Avatar from \"react-user-avatar\";\r\nimport TagsInput from \"react-tagsinput\";\r\nimport \"react-tagsinput/react-tagsinput.css\";\r\nimport Select from \"react-select\";\r\nimport FollowService from \"../Services/FollowService\";\r\nimport { confirmAlert } from \"react-confirm-alert\";\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\r\nimport PostService from \"../Services/PostService\";\r\n\r\nclass WritePostComponent extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      searchWord: \"\",\r\n      firstName: \"Axl\",\r\n      lastName: \"Rose\",\r\n      username: localStorage.getItem(\"username\"),\r\n      pings: [],\r\n      text: \"\",\r\n      followers: [],\r\n      following: [],\r\n      tags: [],\r\n      trends: [],\r\n      mentions: [],\r\n      mentionsData: [],\r\n      hashtags: [],\r\n    };\r\n    this.handleChangeTags = this.handleChangeTags.bind(this);\r\n    this.handleChangeMentions = this.handleChangeMentions.bind(this);\r\n    this.handleText = this.handleText.bind(this);\r\n    this.createPost = this.createPost.bind(this);\r\n  }\r\n\r\n  handleText(event) {\r\n    this.setState({\r\n      text: event.target.value,\r\n    });\r\n  }\r\n\r\n  handleChangeTags(hashtags) {\r\n    this.setState({ hashtags });\r\n  }\r\n\r\n  handleChangeMentions(mentions) {\r\n    this.setState({ mentions });\r\n  }\r\n\r\n  createPost() {\r\n    if (this.state.text.length != 0) {\r\n      let ping = {\r\n        createdBy: this.state.username,\r\n        createdOn: new Date(Date().toLocaleString()),\r\n        text: this.state.text,\r\n        tags: this.addTags(),\r\n      };\r\n      console.log(ping);\r\n      PostService.createPost(ping)\r\n        .then((res) => {\r\n          window.location.reload(false);\r\n          confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n              return (\r\n                <div className=\"custom-ui\">\r\n                  <h1>Post successfully created!!</h1>\r\n                  <button className=\"button-1\" onClick={onClose}>\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              );\r\n            },\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.log(error);\r\n          confirmAlert({\r\n            customUI: ({ onClose }) => {\r\n              return (\r\n                <div className=\"custom-ui\">\r\n                  <h1>Something went wrong!</h1>\r\n                  <p>Please try again</p>\r\n                  <button className=\"button-1\" onClick={onClose}>\r\n                    Close\r\n                  </button>\r\n                </div>\r\n              );\r\n            },\r\n          });\r\n        });\r\n    } else {\r\n      confirmAlert({\r\n        customUI: ({ onClose }) => {\r\n          return (\r\n            <div className=\"custom-ui\">\r\n              <h1>A post should not be empty!</h1>\r\n              <p>Please fill in the post text</p>\r\n              <button className=\"button-1\" onClick={onClose}>\r\n                Close\r\n              </button>\r\n            </div>\r\n          );\r\n        },\r\n      });\r\n    }\r\n  }\r\n\r\n  addTags() {\r\n    let postMentions = this.state.mentions.map((m) => ({\r\n      content: m.value,\r\n      type: \"mention\",\r\n    }));\r\n    console.log(postMentions);\r\n    let postHashtags = this.state.hashtags.map((h) => ({\r\n      content: h,\r\n      type: \"hashtag\",\r\n    }));\r\n    console.log(postHashtags);\r\n    let postTags = [].concat(postMentions, postHashtags);\r\n    console.log(postTags);\r\n    return postTags;\r\n  }\r\n\r\n  componentDidMount() {\r\n    FollowService.getFolowing(this.state.username).then((res) => {\r\n      this.setState({ following: res.data });\r\n      let mentionsData = res.data.map((usrn) => ({\r\n        value: usrn,\r\n        label: usrn,\r\n      }));\r\n      this.setState({ mentionsData: mentionsData });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"write-post-container\">\r\n        <div className=\"user-profile\">\r\n          <div className=\"user-profile-img\">\r\n            <Avatar size=\"40\" name={this.state.firstName} src=\"\" />\r\n          </div>\r\n\r\n          <div>\r\n            <p>{this.state.username}</p>\r\n            <small>Public</small>\r\n            <p></p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"post-input-container\">\r\n          <textarea\r\n            rows=\"3\"\r\n            placeholder={\"What's on your mind?\"}\r\n            onChange={this.handleText}\r\n          ></textarea>\r\n          <div className=\"add-post-links\">\r\n            <a>Hashtags</a>\r\n            <TagsInput\r\n              color=\"blue\"\r\n              size=\"20\"\r\n              value={this.state.hashtags}\r\n              onChange={this.handleChangeTags}\r\n            />\r\n            <br />\r\n            <a>Mention</a>\r\n            <Select\r\n              isMulti\r\n              name=\"colors\"\r\n              options={this.state.mentionsData}\r\n              className=\"basic-multi-select\"\r\n              classNamePrefix=\"select\"\r\n              onChange={this.handleChangeMentions}\r\n            />\r\n          </div>\r\n          <button type=\"button\" id=\"post-btn\" onClick={this.createPost}>\r\n            Post it\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default WritePostComponent;\r\n"]},"metadata":{},"sourceType":"module"}