{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar React = require('react');\n\nvar initials = require('initials');\n\nvar addPx = require('add-px');\n\nvar contrast = require('contrast'); // from https://flatuicolors.com/\n\n\nvar defaultColors = ['#2ecc71', // emerald\n'#3498db', // peter river\n'#8e44ad', // wisteria\n'#e67e22', // carrot\n'#e74c3c', // alizarin\n'#1abc9c', // turquoise\n'#2c3e50'];\n\nfunction sumChars(str) {\n  var sum = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum;\n}\n\nvar UserAvatar = function (_React$Component) {\n  _inherits(UserAvatar, _React$Component);\n\n  function UserAvatar() {\n    _classCallCheck(this, UserAvatar);\n\n    return _possibleConstructorReturn(this, (UserAvatar.__proto__ || Object.getPrototypeOf(UserAvatar)).apply(this, arguments));\n  }\n\n  _createClass(UserAvatar, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          _props$borderRadius = _props.borderRadius,\n          borderRadius = _props$borderRadius === undefined ? '100%' : _props$borderRadius,\n          src = _props.src,\n          srcset = _props.srcset,\n          name = _props.name,\n          color = _props.color,\n          _props$colors = _props.colors,\n          colors = _props$colors === undefined ? defaultColors : _props$colors,\n          size = _props.size,\n          style = _props.style,\n          onClick = _props.onClick,\n          className = _props.className;\n      if (!name) throw new Error('UserAvatar requires a name');\n      var abbr = initials(name);\n      size = addPx(size);\n      var imageStyle = {\n        display: 'block',\n        borderRadius: borderRadius\n      };\n      var innerStyle = {\n        lineHeight: size,\n        textAlign: 'center',\n        borderRadius: borderRadius\n      };\n\n      if (size) {\n        imageStyle.width = innerStyle.width = innerStyle.maxWidth = size;\n        imageStyle.height = innerStyle.height = innerStyle.maxHeight = size;\n      }\n\n      var inner = void 0,\n          classes = [className, 'UserAvatar'];\n\n      if (src || srcset) {\n        inner = React.createElement('img', {\n          className: 'UserAvatar--img',\n          style: imageStyle,\n          src: src,\n          srcSet: srcset,\n          alt: name\n        });\n      } else {\n        var background = void 0;\n\n        if (color) {\n          background = color;\n        } else {\n          // pick a deterministic color from the list\n          var i = sumChars(name) % colors.length;\n          background = colors[i];\n        }\n\n        innerStyle.backgroundColor = background;\n        inner = abbr;\n      }\n\n      if (innerStyle.backgroundColor) {\n        classes.push('UserAvatar--' + contrast(innerStyle.backgroundColor));\n      }\n\n      return React.createElement('div', {\n        'aria-label': name,\n        className: classes.join(' '),\n        style: style\n      }, React.createElement('div', {\n        className: 'UserAvatar--inner',\n        style: innerStyle\n      }, inner));\n    }\n  }]);\n\n  return UserAvatar;\n}(React.Component);\n\nmodule.exports = UserAvatar;","map":{"version":3,"mappings":"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","names":["React","require","initials","addPx","contrast","defaultColors","sumChars","str","sum","i","length","charCodeAt","UserAvatar","props","borderRadius","src","srcset","name","color","colors","size","style","onClick","className","Error","abbr","imageStyle","display","innerStyle","lineHeight","textAlign","width","maxWidth","height","maxHeight","inner","classes","srcSet","alt","background","backgroundColor","push","join","Component","module","exports"],"sources":["C:\\Users\\ADA\\frontend\\node_modules\\react-user-avatar\\index.js"],"sourcesContent":["const React = require('react');\nconst initials = require('initials');\nconst addPx = require('add-px');\nconst contrast = require('contrast');\n\n// from https://flatuicolors.com/\nconst defaultColors = [\n  '#2ecc71', // emerald\n  '#3498db', // peter river\n  '#8e44ad', // wisteria\n  '#e67e22', // carrot\n  '#e74c3c', // alizarin\n  '#1abc9c', // turquoise\n  '#2c3e50', // midnight blue\n];\n\nfunction sumChars(str) {\n  let sum = 0;\n  for(let i = 0; i < str.length; i++) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum;\n}\n\nclass UserAvatar extends React.Component {\n  render() {\n    let {\n      borderRadius='100%',\n      src,\n      srcset,\n      name,\n      color,\n      colors=defaultColors,\n      size,\n      style,\n      onClick,\n      className\n    } = this.props;\n\n    if (!name) throw new Error('UserAvatar requires a name');\n\n    const abbr = initials(name);\n    size = addPx(size);\n\n    const imageStyle = {\n      display: 'block',\n      borderRadius\n    };\n\n    const innerStyle = {\n      lineHeight: size,\n      textAlign: 'center',\n      borderRadius\n    };\n\n    if (size) {\n      imageStyle.width = innerStyle.width = innerStyle.maxWidth = size;\n      imageStyle.height = innerStyle.height = innerStyle.maxHeight = size;\n    }\n\n    let inner, classes = [className, 'UserAvatar'];\n    if (src || srcset) {\n      inner = <img className=\"UserAvatar--img\" style={imageStyle} src={src} srcSet={srcset} alt={name} />\n    } else {\n      let background;\n      if (color) {\n        background = color;\n      } else {\n        // pick a deterministic color from the list\n        let i = sumChars(name) % colors.length;\n        background = colors[i];\n      }\n\n      innerStyle.backgroundColor = background;\n\n      inner = abbr;\n    }\n\n    if (innerStyle.backgroundColor) {\n      classes.push(`UserAvatar--${contrast(innerStyle.backgroundColor)}`);\n    }\n\n    return (\n      <div aria-label={name} className={classes.join(' ')} style={style}>\n        <div className=\"UserAvatar--inner\" style={innerStyle}>\n          {inner}\n        </div>\n      </div>\n    )\n  }\n}\n\nmodule.exports = UserAvatar;\n"]},"metadata":{},"sourceType":"script"}